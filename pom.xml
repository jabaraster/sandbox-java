<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>sandbox</groupId>
    <artifactId>QuickStart</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>QuickStart Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <jetty.version>8.1.5.v20120716</jetty.version>
        <wicket.version>6.4.0</wicket.version>
        <jersey.version>1.8</jersey.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- 依存ライブラリを記述 -->
    <dependencies>

        <!-- JerseyとGuiceの統合 -->
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- 組み込みJettyの実行に必要 -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-jetty</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- GzipFilterのために必要 -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>${jetty.version}</version>
        </dependency>

        <!-- Jettyでセッションレプリケーションを実現するためのライブラリ. Memcachedを利用したHttpSession実装を提供 -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-jetty-memcached</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- Wicket -->
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-core</artifactId>
            <version>${wicket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-extensions</artifactId>
            <version>${wicket.version}</version>
        </dependency>

        <!-- Wicketのログインページによる認証処理 -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-wicket</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- WicketとDIコンテナであるGoogle Guiceを連携させるために必要. 依存JARがガツンと増えるのが難点 -->
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-guice</artifactId>
            <version>${wicket.version}</version>
        </dependency>

        <!-- Jersey(JAX-RS実装)のコア -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- Jerseyでファイルアップロードを扱うために必要 -->
        <!-- このライブラリを使う場合はJersey依存になることに注意が必要だが、かなり便利なので重宝する. -->
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- JAX-RSでJSONを上手に扱うためのライブラリ. 河野作成 -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-jax-rs</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- DBアクセス -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.1.2</version>
        </dependency>

        <!-- JPA用ユーティリティ -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-jpa</artifactId>
            <version>2.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-jpa-guice</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- Beanの検証(JSR303) -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.1.0.Final</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>

        <!-- ログ -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.2</version>
        </dependency>

        <!-- Servletに関連するプリミティブライブラリ. リクエストダンプに使う. 河野作成. -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-servlet</artifactId>
            <version>1.2.1</version>
        </dependency>

        <!-- ユーティリティ. 河野作成. -->
        <dependency>
            <groupId>jabaraster</groupId>
            <artifactId>jabara-general</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- テスト用 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.171</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>QuickStart</finalName>

        <!-- JettyにServlet3.0のアノテーションを読み込んでもらうためにclassファイルの出力先ディレクトリを変更する -->
        <outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
        <testOutputDirectory>src/main/webapp/WEB-INF/test-classes</testOutputDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>

            <!-- UTF-8のソースを正しくコンパイルしてもらうための設定 -->
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <optimize>true</optimize>
                    <debug>true</debug>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- このプロジェクトが依存するJARのソースとJavadocをダウンロードしてくるように設定 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <useProjectReferences>false</useProjectReferences> <!-- この設定がないと、河野環境で困ったことになってしまう. -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>sandbox.quickstart.WebStarter</mainClass>
                    <systemProperties>
                        <!-- <systemProperty> <key>wicket.configuration</key> <value>deployment</value> 
                            </systemProperty> -->
                        <systemProperty>
                            <key>memcached.servers</key>
                            <value>localhost:11211</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <!-- <executions> <execution> <phase>test</phase> <goals> <goal>java</goal> 
                    </goals> </execution> </executions> -->
            </plugin>

            <!-- このプロジェクトが依存するJARをクラスパスにコピーする設定 -->
            <!-- これがないとHerokuでのWebアプリ起動に失敗する -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- WAR作成時にweb.xmlがなくてもOKにする -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <repositories>
        <!-- 河野作成ライブラリのリポジトリ -->
        <repository>
            <id>jabaraster's repository</id>
            <url>http://jabaraster.github.io/maven/</url>
        </repository>
    </repositories>
</project>
